"use strict";(self.webpackChunkblog_template=self.webpackChunkblog_template||[]).push([[953],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,l(l({ref:n},p),{},{components:t})):r.createElement(f,l({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6801:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={slug:"ecr",title:"linux(macOS) AWS docker \ud1a0\ud070 & k8s secret \uc790\ub3d9 \uac31\uc2e0 \uc2a4\ud06c\ub9bd\ud2b8",authors:"andes",tags:["ecr","aws token","aws"]},l=void 0,c={permalink:"/blog/ecr",source:"@site/blog/2023-02-02-automation-ecr-pull-down-script/content.md",title:"linux(macOS) AWS docker \ud1a0\ud070 & k8s secret \uc790\ub3d9 \uac31\uc2e0 \uc2a4\ud06c\ub9bd\ud2b8",description:"\uc120\ud589\uc870\uac74",date:"2023-02-02T00:00:00.000Z",formattedDate:"2023\ub144 2\uc6d4 2\uc77c",tags:[{label:"ecr",permalink:"/blog/tags/ecr"},{label:"aws token",permalink:"/blog/tags/aws-token"},{label:"aws",permalink:"/blog/tags/aws"}],readingTime:1.35,truncated:!1,authors:[{name:"Andes Noh",title:"\uc5f0\uad6c\uc6d0",url:"https://github.com/andes-noh",imageURL:"https://github.com/andes-noh.png",key:"andes"}],nextItem:{title:"pem\uc744 \uc774\uc6a9\ud558\uc5ec ssh \uc811\uc18d\ud558\uae30",permalink:"/blog/ssh pem"}},i={authorsImageUrls:[void 0]},s=[{value:"\uc120\ud589\uc870\uac74",id:"\uc120\ud589\uc870\uac74",children:[]},{value:"aws profile \ub4f1\ub85d \ubc29\ubc95",id:"aws-profile-\ub4f1\ub85d-\ubc29\ubc95",children:[]},{value:"Script",id:"script",children:[]},{value:"crontab",id:"crontab",children:[]}],p={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\uc120\ud589\uc870\uac74"},"\uc120\ud589\uc870\uac74"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"k8s\uc124\uce58"),(0,a.kt)("li",{parentName:"ul"},"ns \uc0dd\uc131"),(0,a.kt)("li",{parentName:"ul"},"aws profile \ub4f1\ub85d")),(0,a.kt)("h1",{id:""}),(0,a.kt)("h2",{id:"aws-profile-\ub4f1\ub85d-\ubc29\ubc95"},"aws profile \ub4f1\ub85d \ubc29\ubc95"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\ud504\ub85c\ud544 \uad6c\uc131"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"aws configure\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\ud504\ub85c\ud544 \uad6c\uc131 \ub370\uc774\ud130 \uc124\uc815(\uc544\ub798\uc640 \uac19\uc774 \ub530\ub85c \uc9c0\uc815 \ud639\uc740 \ud130\ubbf8\ub110\uc744 \ud655\uc778\ud558\uba74 \uac12 \uc785\ub825)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"aws configure set aws_access_key_id XXXXXXXXXXX \\\naws configure set aws_secret_access_key XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX \\\naws configure set region ap-northeast-2 \\\naws configure set output json\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\uc774\ub984 \uc124\uc815\uc774 \ud544\uc694\ud560\ub54c\ub294 --profile \uc635\uc158\uc744 \ucd94\uac00\ub85c \uc900\ub2e4"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"aws configure --profile TESTUSER\n")),(0,a.kt)("h1",{id:"-1"}),(0,a.kt)("h2",{id:"script"},"Script"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"default aws configure")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ACCOUNT=xxxxxxxxxxxx\nREGION=xx-xxxx-x\nSECRET_NAME=${REGION}-ecr-registry\nEMAIL=email@email.com\nNAMESPACE=xxxx\n\n#\n\n# ~/.docker/config.json \uc0dd\uc131\n\naws ecr get-login-password --region REGION | docker login --username AWS --password-stdin \\\n ACCOUNT.dkr.ecr.REGION.amazonaws.com\n\n#\n\n# Create or replace registry secret\n\n#\n\nkubectl create secret SECRET_NAME aws -n NAMESPACE \\\n --from-file=.dockerconfigjson=$home.docker/config.json \\\n --type=kubernetes.io/dockerconfigjson\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud2b9\uc815 \ud504\ub85c\ud544\ub85c \uc790\ub3d9 \uac31\uc2e0 \ubc0f \uc2dc\ud06c\ub9bf \uc0dd\uc131 \uacbd\uc6b0")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ACCOUNT=xxxxxxxxxxxx\nREGION=xx-xxxx-x\nSECRET_NAME=${REGION}-ecr-registry\nEMAIL=email@email.com\nNAMESPACE=xxxx\n\n#\n\n# ~/.docker/config.json \uc0dd\uc131\n\naws ecr get-login-password --region REGION --profile NAME | docker login --username AWS --password-stdin \\\n ACCOUNT.dkr.ecr.REGION.amazonaws.com\n\n#\n\n# Create or replace registry secret\n\n#\n\nkubectl create secret SECRET_NAME aws -n NAMESPACE \\\n --from-file=.dockerconfigjson=$home.docker/config.json \\\n --type=kubernetes.io/dockerconfigjson\n")),(0,a.kt)("h2",{id:"crontab"},"crontab"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"12\uc2dc\uac04\ub9c8\ub2e4 \ud1a0\ud070\uc774 \ub9cc\ub8cc\ub418\uae30\ub54c\ubb38\uc5d0 crontab\ub85c \uc704\uc758 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \ub4f1\ub85d\uc2dc\ucf1c \ud1a0\ud070 \uc790\ub3d9 \uac31\uc2e0 \ubc0f \uc2dc\ud06c\ub9bf \uc7ac\uc0dd\uc131")))}u.isMDXComponent=!0}}]);